Metadata-Version: 2.2
Name: job-scrape
Version: 0.0.1
Summary: A package to scrape job postings.
Author-email: Mika <mikacchang@gmail.com>
Project-URL: Homepage, https://github.com/Mika-Chang/job-scrape
Project-URL: Issues, https://github.com/Mika-Chang/job-scrape/issues
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: beautifulsoup4==4.13.3
Requires-Dist: requests>=2.32.3
Requires-Dist: selenium>=4.29.0

# WorkdayScraper

This is a project that can pull jobs from workday careers pages. I'm hoping to eventually set up a program to update me within a day of jobs at companies I want to work at. 

Feel free to use this! (But also try not to be spammy with requests)

## Requirements
- Required python packages (see requirements.txt)
  - You can install with `pip install -r requirements.txt`. Be careful, this should probably be done in a venv
- WebDriver. This will be specific to your browser! You can download here: https://www.selenium.dev/documentation/webdriver/

## Position Information
Scraped information about a job will be formatted in JSON with the following information:
  
- `scraped_url`: `str`
  - the url that was scraped for information.
- `scrape_successful`: `bool`
  - Whether information was extracted from `scraped_url` successfully. If `False` the following fields may not be added to the job. 
- `title`: `str`
  - The title of the position. E.g. "Software Engineer II"
- `job_id`: `str`
  - The ID of the job. This is a string of numbers and letters.
- `date`: `str`
  - The date the job was posted.
- `employment_type`: `str`
  - Type of employment specified by employer. E.g. "FULL_TIME"
- `description`: `str`
  - A description of the position.
- `country`: `str`
  - The country where the position will be.
- `city`: `str`
  - The city where the position will be.
